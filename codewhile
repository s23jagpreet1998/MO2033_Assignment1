using System;

namespace MO2033_Assignment1
{
    class Program
    {
        static void Main(string[] args)
        {
            // Numeric Comparison
            Console.WriteLine("Please enter your age:");
            int age;
            
            // Ensure the input is a valid integer
            while (!int.TryParse(Console.ReadLine(), out age))
            {
                Console.WriteLine("Invalid input. Please enter a valid number for your age:");
            }

            if (age >= 18)
            {
                Console.WriteLine("You are an adult.");
            }
            else
            {
                Console.WriteLine("You are a minor.");
            }

            // String Comparison
            Console.WriteLine("\nPlease enter your favorite fruit (e.g., apple, banana):");
            string favoriteFruit = Console.ReadLine().ToLower(); // Convert input to lowercase for easy comparison

            if (favoriteFruit == "apple")
            {
                Console.WriteLine("You love apples!");
            }
            else if (favoriteFruit == "banana")
            {
                Console.WriteLine("Bananas are great!");
            }
            else
            {
                Console.WriteLine($"So you like {favoriteFruit}? Interesting choice!");
            }
        }
    }
}


In this sample solution:

- For the numeric comparison, we're using an `int` variable type for the age. We've also added an input validation check to ensure the user enters a valid number.
- For the string comparison, we're using a `string` variable type for the favorite fruit. We convert the user's input to lowercase to ensure a case-insensitive comparison. This helps in handling cases where a user might enter "Apple", "apple", "APPLE", etc.

For Loop Implementation:

  * Correct use of for loop: 10 points
  * Correctly prints numbers 1-10: 10 points

Here's a sample solution for the for-loop implementation using an array of fruits:


using System;

namespace MO2033_Assignment1
{
    class Program
    {
        static void Main(string[] args)
        {
            string[] fruits = {"apple", "banana", "cherry", "date", "elderberry"};

            Console.WriteLine("List of fruits:");
            for (int i = 0; i < fruits.Length; i++)
            {
                Console.WriteLine($"{i + 1}. {fruits[i]}");
            }

            // Let's do something interesting: ask the user for their favorite fruit and inform if it's on the list
            Console.WriteLine("\nWhich of the above fruits is your favorite?");
            string userFruit = Console.ReadLine().ToLower();

            bool isFruitFound = false;
            for (int i = 0; i < fruits.Length; i++)
            {
                if (fruits[i] == userFruit)
                {
                    isFruitFound = true;
                    break;
                }
            }

            if (isFruitFound)
            {
                Console.WriteLine($"Great choice! {userFruit} is on the list.");
            }
            else
            {
                Console.WriteLine($"Sorry, {userFruit} is not on our list. You have a unique taste!");
            }
        }
    }
}


In this solution:

* We've first defined an array of fruits and used a for-loop to display them.
* We then ask the user for their favorite fruit.
* Using another for-loop, we search for the user's choice in our fruits array.
* Depending on whether the fruit is found or not, we display an appropriate message to the user.

While Loop and User Input:

  * Continuously prompts user until "stop": 10 points
  * Correctly displays user's favorite color: 10 points

Here's a fun example:

Scenario: A user is prompted to input characters, and the program will construct a word from the entered characters. The word-building process will stop when the user enters the exclamation mark (!).


using System;

namespace MO2033_Assignment1
{
    class Program
    {
        static void Main(string[] args)
        {
            string constructedWord = "";
            Console.WriteLine("Let's build a word! Enter characters one by one.");
            Console.WriteLine("Enter '!' to stop and see the constructed word.");

            while (true)
            {
                Console.WriteLine("Enter a character:");
                char userInput = Console.ReadKey().KeyChar; // Read a single character from user input
                
                if (userInput == '!')
                {
                    Console.WriteLine("\nStopping word construction.");
                    break;
                }
                
                constructedWord += userInput; // Add the character to our word

                Console.WriteLine($"\nCurrent word: {constructedWord}");
            }

            if (constructedWord.Length > 0)
            {
                Console.WriteLine($"Your constructed word is: {constructedWord}");
            }
            else
            {
                Console.WriteLine("You didn't add any characters to the word.");
            }
        }
    }
}
